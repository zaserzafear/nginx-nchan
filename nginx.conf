user nginx;
worker_processes auto; ## Default: 1 per 1 vCPU

pid /run/nginx.pid;

include /usr/share/nginx/modules/*.conf;
include /usr/share/nginx/modules-available/mod-nchan.conf;

events {
    worker_connections 4096; ## Default: 1024 per 1 vCPU
}

http {
    log_format nchan '$nchan_channel_id $nchan_subscriber_type $nchan_publisher_type $nchan_message_id $nchan_prev_message_id';
    access_log /dev/stdout;
    default_type application/octet-stream;
    client_body_temp_path /tmp/ 1 2;
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 100m;
    nchan_subscribe_existing_channels_only off;
    nchan_max_reserved_memory 128M;

    # upstream redis_cluster {
    #     nchan_redis_server redis://192.168.241.82:6379;
    #     # nchan_redis_server redis://:cb2ed12b47d53421a08317cbdc20828fdff334c94341fc81a7e3b59b46078726@192.168.241.82:6379;
    #     nchan_redis_connect_timeout 2s;
    #     nchan_redis_optimize_target bandwidth;
    #     nchan_redis_namespace nginx_nchan;
    # }

    server {
        listen 80;

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
        }

        location /nchan_stub_status {
            nchan_stub_status;
        }

        location = /sub {
            # nchan_redis_pass redis_cluster;
            nchan_subscriber;
            nchan_channel_id 'foo';
        }

        location = /pub {
            # nchan_redis_pass redis_cluster;
            nchan_publisher;
            nchan_channel_id 'foo';
        }
    }
}
